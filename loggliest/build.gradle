apply plugin: 'com.android.library'

ext {
    PUBLISH_GROUP_ID = 'com.inrista.loggliest'
    PUBLISH_ARTIFACT_ID = 'loggliest'
    PUBLISH_VERSION = '0.2'
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.3'
    defaultConfig {
        versionCode 2
        versionName PUBLISH_VERSION
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'com.squareup.retrofit:retrofit:1.9.0'
}

apply plugin: 'maven-publish'

configurations {
    optional
    compile.extendsFrom optional
}

def localReleaseDest = "${buildDir}/release/${project.PUBLISH_VERSION}"

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    if (!name.equals("debug")) {
        def task = project.tasks.create "jar${name.capitalize()}", Jar
        task.dependsOn variant.javaCompile
        task.from variant.javaCompile.destinationDir
        artifacts.add('archives', task)
    }
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}


task zipRelease(type: Zip) {
    from localReleaseDest
    destinationDir buildDir
    archiveName "release-${project.PUBLISH_VERSION}.zip"
}

task createRelease  { doLast {}}
createRelease.dependsOn(uploadArchives)
createRelease.dependsOn(zipRelease)

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}
